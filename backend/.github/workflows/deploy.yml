name: Deploy to AWS Lambda

on:
  push:
    branches:
      - main
      - develop
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: backend/package-lock.json

      - name: Install dependencies
        working-directory: ./backend
        run: npm ci

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION || 'us-east-1' }}

      - name: Deploy to Development
        if: github.ref == 'refs/heads/develop'
        working-directory: ./backend
        env:
          DB_URL: ${{ secrets.DB_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          FRONTEND_URL: ${{ secrets.FRONTEND_URL_DEV }}
          SMS_API_KEY: ${{ secrets.SMS_API_KEY }}
          SMS_SENDER: ${{ secrets.SMS_SENDER }}
          CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
          CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
          CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}
          EMAIL_USER: ${{ secrets.EMAIL_USER }}
          EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
        run: npm run deploy:dev

      - name: Deploy to Production
        if: github.ref == 'refs/heads/main'
        working-directory: ./backend
        env:
          DB_URL: ${{ secrets.DB_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          FRONTEND_URL: ${{ secrets.FRONTEND_URL_PROD }}
          SMS_API_KEY: ${{ secrets.SMS_API_KEY }}
          SMS_SENDER: ${{ secrets.SMS_SENDER }}
          CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
          CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
          CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}
          EMAIL_USER: ${{ secrets.EMAIL_USER }}
          EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
        run: npm run deploy:prod

      - name: Notify deployment success
        if: success()
        run: |
          echo "✅ Deployment successful!"
          echo "Branch: ${{ github.ref }}"
          echo "Commit: ${{ github.sha }}"

      - name: Notify deployment failure
        if: failure()
        run: |
          echo "❌ Deployment failed!"
          echo "Branch: ${{ github.ref }}"
          echo "Commit: ${{ github.sha }}"
