service: akoya-laundry-api

useDotenv: true

provider:
  name: aws
  runtime: nodejs20.x
  stage: ${opt:stage, 'dev'}
  profile: second-account
  region: ${opt:region, 'us-east-1'}
  memorySize: 512
  timeout: 30
  environment:
    NODE_ENV: ${opt:stage, 'dev'}
    DB_URL: ${env:DB_URL}
    JWT_SECRET: ${env:JWT_SECRET}
    FRONTEND_URL: ${env:FRONTEND_URL}
    SMS_API_KEY: ${env:SMS_API_KEY}
    SMS_SENDER: ${env:SMS_SENDER}
    CLOUDINARY_CLOUD_NAME: ${env:CLOUDINARY_CLOUD_NAME}
    CLOUDINARY_API_KEY: ${env:CLOUDINARY_API_KEY}
    CLOUDINARY_API_SECRET: ${env:CLOUDINARY_API_SECRET}
    EMAIL_USER: ${env:EMAIL_USER}
    EMAIL_PASS: ${env:EMAIL_PASS}

  # IAM Role permissions
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
          Resource: "*"

functions:
  api:
    handler: lambda.main
    events:
      - http:
          path: /
          method: ANY
          cors:
            origin: ${env:FRONTEND_URL}
            headers:
              - Content-Type
              - Authorization
              - Cookie
              - X-Amz-Date
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
              - X-Requested-With
            allowCredentials: true
          # ✅ Make sure JSON requests are NOT base64 encoded
          binaryMediaTypes:
            - "image/*"
            - "application/pdf"

      - http:
          path: /{proxy+}
          method: ANY
          cors:
            origin: ${env:FRONTEND_URL}
            headers:
              - Content-Type
              - Authorization
              - Cookie
              - X-Amz-Date
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
              - X-Requested-With
            allowCredentials: true
          # ✅ Same binary types for all routes
          binaryMediaTypes:
            - "image/*"
            - "application/pdf"

plugins:
  - serverless-dotenv-plugin
  - serverless-offline

custom:
  serverless-offline:
    httpPort: 4000
    lambdaPort: 3002
    noPrependStageInUrl: true
    useChildProcesses: true

package:
  individually: false
  patterns:
    - "!.git/**"
    - "!.env.example"
    - "!README.md"
    - "!.gitignore"
    - "!temp/**"
    - "!test/**"
    - "!coverage/**"
    - "!.vscode/**"
  exclude:
    - .git/**
    - .vscode/**
    - test/**
    - coverage/**
    - "*.md"
